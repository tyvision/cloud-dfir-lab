# Test with
# ansible-playbook --check -i inventory.yml deploy.yml
#
# Run with
# ansible-playbook -i inventory.yml deploy.yml
#
---
- name: Configure laboratory for Cloud Digital Forencics Incident Responce

  hosts: group_cloud_dfir_laboratory

  vars:
      v_proj: "~/cloud-dfir"
      v_docker: "{{ v_proj }}/docker/"

  tasks:
    - name: Install pre-requisites
      become: yes
      apt:
        update_cache: yes
        pkg:
          - python3-pip
          - docker.io
          - docker-compose
          - iptables-persistent

    - name: Install ansible modules for docker-compose control
      pip:
        name:
          - docker
          - docker-compose

    # Without this user can only run docker commands via SUDO
    # But running via SUDO means you can not pass env variables
    # So the fix is to add user to group "docker"
    - name: Group docker exists
      become: yes
      group:
        name: docker
        state: present

    - name: "Adding {{ ansible_user }} to group docker"
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Reset SSH connection to refresh user groups
      meta: reset_connection

    - name: Create project directory
      file:
        path: "{{ v_proj }}"
        state: directory
        mode: '700'

    - name: Copy docker configuration
      copy:
        src: "{{ playbook_dir }}/../docker/"
        dest: "{{ v_docker }}/"

    # Must copy code, so a docker container can be build on the laboratory machine
    # Can not push pre-build container to registry, because code inside container must be private
    - name: Copy logcollector dependencies config
      copy:
        src: "{{ playbook_dir }}/../config/requirements.txt"
        dest: "{{ v_proj }}/config/"

    - name: Copy logcollector
      copy:
        src: "{{ playbook_dir }}/../logcollector/"
        dest: "{{ v_proj }}/logcollector/"
        mode: '700'

    # to flush iptables rules "iptables -F"
    # to view iptables rules "iptables -S DOCKER-USER"
    # for allow only ssh, see https://www.cyberciti.biz/tips/linux-iptables-4-block-all-incoming-traffic-but-allow-ssh.html
    # also note: https://docs.docker.com/network/iptables/#setting-the-default-bind-address-for-containers
    - name: Drop incoming connections if they are not SSH
      become: yes
      iptables:
        action: append
        chain: INPUT
        in_interface: eth0
        protocol: tcp
        ctstate: NEW
        destination_port: "!22"
        jump: DROP

    - name: Save iptables rules
      become: yes
      shell: "iptables-save > /etc/iptables/rules.v4"
      changed_when: false

    - name: Run docker-compose to start up necessary services
      docker_compose:
        project_src: "{{ v_docker }}/"
        build: yes
        state: present
        restarted: yes

    - name: "Please, create a new sketch in timesketch manually post-install"
      debug:
        msg:
          - "To access Timesketch and Logcollector you must tunnel HTTP over SSH"
          - "Access Timesketch: create the tunnel:"
          - " # ssh -i {{ ansible_ssh_private_key_file }} -L localhost:8000:localhost:80 {{ ansible_user }}@{{ ansible_host }} -p {{ ansible_port }}"
          - "Access Timesketch web GUI at http://{{ ansible_host }}:8000"
          - "Access Logcollector: create the tunnel:"
          - " # ssh -i {{ ansible_ssh_private_key_file }} -L localhost:9000:localhost:9000 {{ ansible_user }}@{{ ansible_host }} -p {{ ansible_port }}"
          - "Access Logcollector web gui at http://{{ ansible_host }}:9000"

